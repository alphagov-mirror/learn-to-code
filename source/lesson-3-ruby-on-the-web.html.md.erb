---
title: "Lesson 3: Ruby on the Web"
weight: 50
---

# Lesson 3: Ruby on the Web

## Rough plan for this lesson

Describe in the introduction that we're going to do lots of things which
would be considered serious mistakes in a production web application.

We're just beginners, so we don't need to be held to the same standards as
professionals. We'll explain all the deliberate mistakes at the end, and
introduce some of the tools professional developers use to avoid making them.

- hello world to begin with
- random number website
- reverse some text website

Tying everything together:

- Apply for a barking permit website - maybe use global variables instead of cookies initially?

Maybe a "check your answers" page would be good? Could use a method to
calculate the age of a dog in dog years. Maybe just print the permit in a
table?

Introduction to web security - leave this for the end...

- `>elyts/<};atnegam:dnuorgkcab{ydob>elyts<`

## Introduction

### Objectives

In this tutorial we are going to look at:

* using `require` to access other Ruby modules
* using Ruby's `Date` type
* what HTTP is and how it works
* using Google Chrome's Developer tools to inspect HTTP requests
* building a web server with Ruby
* templating HTML
* introducing web security

### Goal

By the end of this tutorial you will have built [this web application](https://apply-for-a-barking-permit.london.cloudapps.digital/):

<a href="https://apply-for-a-barking-permit.london.cloudapps.digital/">
<img src="images/lesson-3/finished-application.png" alt="Apply for a Barking Permit website, showing the form from lesson 1 and the confirmation page">
</a>

You'll have a basic understanding of how web applications work, and a good foundation to build on.

### Further reading
